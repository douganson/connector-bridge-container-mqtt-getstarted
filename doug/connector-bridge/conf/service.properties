#
# @file    gateway.properties
# @brief   properties for the connector-bridge gateway
# @author  Doug Anson
# @version 1.0
# @see
#
# Copyright 2015. ARM Ltd. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# mDS/mDC-specific mDS Peer Processor configuration
#
config_fields=api_key;api_endpoint_address;mds_enable_long_poll;mqtt_address;mqtt_port;mqtt_use_ssl;mqtt_username;mqtt_password;mqtt_client_id;mqtt_mds_topic_root;mqtt_no_client_creds;mqtt_import_keystore;threads_core_pool_size;threads_max_pool_size;threads_keep_alive_time
mds_version=3.0
mds_skip_validation_override=false
mds_domain=domain
mds_def_domain=default
mds_domain_listener=false
mds_domain_listener_sleep_interval_ms=10000
mds_admin_port=8081
mds_admin_username=admin
mds_admin_password=admin
mds_domain_uri=admin-api/rd
mds_content_type=application/json
api_endpoint_address=api.connector.mbed.com
mds_port=80
mds_username=app2
mds_password=secret
mds_use_api_token=true
api_key=Your_Connector_API_Token_Goes_Here
mds_webhook_validator_poll_ms=90000
mds_webhook_validator_enable=false
mds_webhook_retry_max_tries=10
mds_bridge_error_level=warning,critical
mds_device_attributes_path=/3/0
mds_device_attributes_content_type=application/vnd.oma.lwm2m+tlv

#
# mDS/mDC REST Versioning
#
mds_enable_rest_versions=true
mds_rest_version=2

#
# Other mDS Peer Processor configuration
#
mds_bridge_empty_string=0
mds_gw_address=127.0.0.1
mds_gw_port=28519
mds_gw_context_path=/connector-bridge
mds_gw_console_path=/Console
mds_gw_events_path=/events
mds_gw_callback=callback
mds_default_notify_url=http\://127.0.0.1\:8083/dsevents
mds_gw_use_ssl=true
mds_use_https_dispatch=true
mds_gw_keystore_password=arm1234

#
# Default Bridge DeviceInfo
#
mds_bridge_manufacturer=ARM
mds_bridge_serial_number=0123456789
mds_bridge_model=software
mds_bridge_class=Bridge
mds_bridge_description=MBED Cloud Bridge
mds_bridge_firmware_info=v1.0
mds_bridge_hardware_info=v1.0
# mds_bridge_descriptive_location=Bluemix Container

#
# Default Device Metadata Resource URIs
#
mds_device_manufacturer_res=/dev/mfg
mds_device_serial_number_res=/dev/serial
mds_device_model_res=/dev/model
mds_device_class_res=/dev/class
mds_device_description_res=/dev/description
mds_device_firmware_info_res=/dev/firmware
mds_device_hardware_info_res=/dev/hardware
mds_device_descriptive_location_res=/dev/location

#
# We can add multiple MQTT brokers to interact with here: 
#   - "iotf" instantiates an IoTF compatible MQTT processor
#   - "std" instantiates a std MQTT processor
#   - "-d" establishes the "default" MQTT processor
#
# NOTE: MQTT preferences, for multiple brokers will have a suffix appended for each config entry
#       where the suffix is the index of the broker in the config list (starting with "0" as the first entry.
#
#       Each broker configuration is separated by a ";"
#
#mqtt_mgr_config=iotf-d;std

#
# REQUESTs coming in from MQTT are prefaced with this tag
#
mds_mqtt_request_tag=request

#
# Generic MQTT Peer Processor Configuration
#
enable_generic_mqtt_processor=true
# mqtt_address=Your_MQTT_broker_IP_address_Goes_Here
mqtt_address=127.0.0.1
mqtt_port=1883
mqtt_username=off
mqtt_password=off
mqtt_connect_retries=10
mqtt_retry_sleep=2000
mqtt_receive_loop_sleep=1
mqtt_client_id=off
mqtt_will_message=off
mqtt_traffic_class=-1
mqtt_reconnect_retries_max=10
mqtt_obs_auto_subscribe=true
mqtt_keep_alive=7200
mqtt_use_ssl=false
mqtt_clean_session=true
mqtt_default_client_id=off
mqtt_version=3.0
mqtt_keystore_pw=arm1234
mqtt_keystore_basedir=mqtt_keystores
mqtt_keystore_basename=keystore.jks
mqtt_debug_creds=false
mqtt_no_client_creds=false
mqtt_import_keystore=false
mqtt_pubkey_pem_filename=pubkey.pem

#
# Topic Root for generic MQTT (cannot be more than 1 level (ie. not "arm/mbed".. that's two levels).. 
#
mqtt_mds_topic_root=mbed

#
# 3rd Party REST Peer Processor Support (SAMPLE)
#
enable_3rd_party_rest_processor=false

#
# IBM Watson IoT MQTT Peer Processor Add-On
#
enable_iotf_addon=false
iotf_device_data_key=d
iotf_org_id=<ORG_ID GOES HERE>
iotf_org_key=<IoTF ORG_KEY_GOES_HERE>
iotf_auth_token=<IoTF AUTH TOKEN GOES HERE>
iotf_api_key=a-__ORG_ID__-__API_KEY__
iotf_mqtt_ip_address=23.246.232.210
iotf_mqtt_port=1883
iotf_observe_notification_topic=iot-2/type/__DEVICE_TYPE__/id/__EPNAME__/evt/__EVENT_TYPE__/fmt/json
iotf_coap_cmd_topic=iot-2/type/__DEVICE_TYPE__/id/__EPNAME__/cmd/__COMMAND_TYPE__/fmt/json
iotf_client_id_template=a\:__ORG_ID__\:
iotf_use_rti_format=false
iotf_force_app_binding=false
iotf_rest_uri_template=/api/v0002/device/types
iotf_rest_hostname_template=__ORG_ID__.internetofthings.ibmcloud.com
iotf_gw_id=mbedConnectorBridge
iotf_gw_type_id=mbedBridge
iotf_gw_dev_type_id=mbedDevice
iotf_add_gw_type_template={\"id\":\"__GW_TYPE_ID__\",\"classId\":\"Gateway\"}
iotf_add_gw_dev_type_template={\"id\":\"__TYPE_ID__\",\"classId\":\"Device\"}
iotf_add_gw_template={\"deviceId\":\"__GW_ID__\",\"authToken\":\"__AUTH__\" __DEVICE_INFO__}
iotf_add_device_template={\"deviceId\":\"__DEVICE_ID__\",\"gatewayId\":\"__GW_ID__\",\"gatewayTypeId\":\"__GW_TYPE_ID__\",\"authToken\":\"__AUTH__\",\"metadata\":__METADATA__ __DEVICE_INFO__}
#
# IBM StarterKit MQTT Peer Processor Support
#
enable_starterkit_addon=false
starterkit_mqtt_ip_address=quickstart.messaging.internetofthings.ibmcloud.com
starterkit_notification_topic=iot-2/evt/status/fmt/json
starterkit_device_type=iotsample-mbed-k64f
starterkit_mqtt_port=1883

#
# MS IoTHub MQTT Peer Processor Add-On
#
enable_iot_event_hub_addon=false
iot_event_hub_name=IoT_Event_Hub_Name_Goes_Here
iot_event_hub_mqtt_username=__IOT_EVENT_HUB__.azure-devices.net/__EPNAME__
iot_event_hub_mqtt_password=HostName=__IOT_EVENT_HUB__.azure-devices.net;DeviceId=__EPNAME__;SharedAccessKey=__EPNAME_KEY__
iot_event_hub_mqtt_ip_address=__IOT_EVENT_HUB__.azure-devices.net
iot_event_hub_mqtt_port=1883
iot_event_hub_observe_notification_topic=devices/__EPNAME__/messages/events/
iot_event_hub_coap_cmd_topic=devices/__EPNAME__/messages/devicebound/#
iot_event_hub_api_version=2016-02-03
iot_event_hub_sas_token=Valid_SAS_Token_Goes_Here
iot_event_hub_device_id_url=https://__IOT_EVENT_HUB__.azure-devices.net/devices/__EPNAME__?api-version=__API_VERSION__
iot_event_hub_add_device_json={ deviceId:"__EPNAME__",status:"enabled",statusReason:""}
iot_event_hub_enable_device_id_prefix=true
iot_event_hub_device_id_prefix=mbed 

#
# AWS IoT MQTT Peer Processor Add-On
#
enable_aws_iot_gw_addon=false
aws_iot_policy_name=mbed-connector-bridge-policy
aws_iot_policy_document={\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iot:*\"],\"Resource\":[\"*\"],\"Effect\":\"Allow\"}]}
aws_iot_observe_notification_topic=__TOPIC_ROOT__/__DEVICE_TYPE__/__EPNAME__/coap/observation
aws_iot_coap_cmd_topic=__TOPIC_ROOT__/__DEVICE_TYPE__/__EPNAME__/coap/__COMMAND_TYPE__/#
aws_iot_region=AWS_region_goes_here
aws_iot_access_key_id=AWS_Access_Key_ID_goes_here
aws_iot_secret_access_key=AWS_Secret_Access_Key_goes_here
#
# Topic Root for AWS (cannot be more than 1 level (ie. not "arm/mbed".. that's two levels).. 
#
aws_iot_topic_root=mbed

#
# Polling vs. Notification Enablement
#
mds_enable_long_poll=false
mds_long_poll_uri=notification/pull

#
# Enable unified formatting to the greatest extent possible for CoAP payloads
#
unified_format_enabled=true

#
# ThreadExecutor configuration
#
threads_core_pool_size=1000
threads_max_pool_size=1000000
threads_keep_alive_time=60

#
# Master Node: if distributed database enabled, then we can act as a non-master node
#
is_master_node = true

#
# EXPERIMENTAL: Distributed Database Enablement (with MongoDB)
#
enable_distributed_db_cache=false
distributed_db_tablename_delimiter=_
distributed_db_ip_address=MongoDB_IP_Address_Goes_Here
distributed_db_port=MongoDB_Port_Num_Goes_Here
distributed_db_username=MongoDB_Username_Goes_Here
distributed_db_password=MongoDB_Password_Goes_Here
